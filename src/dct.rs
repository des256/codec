use {
    crate::*,
};

fn dct(x: [i32; 16]) -> [i32; 16] {
    let a = [
        x[0] + x[3],
        x[1] + x[2],
        x[0] - x[3],
        x[1] - x[2],
        x[4] + x[7],
        x[5] + x[6],
        x[4] - x[7],
        x[5] - x[6],
        x[8] + x[11],
        x[9] + x[10],
        x[8] - x[11],
        x[9] - x[10],
        x[12] + x[15],
        x[13] + x[14],
        x[12] - x[15],
        x[13] - x[14],
    ];
    let b = [
        a[0] + a[1],
        2 * a[2] + a[3],
        a[0] - a[1],
        a[2] - 2 * a[3],
        a[4] + a[5],
        2 * a[6] + a[7],
        a[4] - a[5],
        a[6] - 2 * a[7],
        a[8] + a[9],
        2 * a[10] + a[11],
        a[8] - a[9],
        a[10] - 2 * a[11],
        a[12] + a[13],
        2 * a[14] + a[15],
        a[12] - a[13],
        a[14] - 2 * a[15],
    ];
    let c = [
        b[0] + b[3],
        b[1] + b[2],
        b[0] - b[3],
        b[1] - b[2],
        b[4] + b[7],
        b[5] + b[6],
        b[4] - b[7],
        b[5] - b[6],
        b[8] + b[11],
        b[9] + b[10],
        b[8] - b[11],
        b[9] - b[10],
        b[12] + b[15],
        b[13] + b[14],
        b[12] - b[15],
        b[13] - b[14],
    ];
    [
        c[0] + c[1],
        2 * c[2] + c[3],
        c[0] - c[1],
        c[2] - 2 * c[3],
        c[4] + c[5],
        2 * a[6] + c[7],
        c[4] - c[5],
        c[6] - 2 * c[7],
        c[8] + c[9],
        2 * c[10] + c[11],
        c[8] - c[9],
        c[10] - 2 * c[11],
        c[12] + c[13],
        2 * c[14] + c[15],
        c[12] - c[13],
        c[14] - 2 * c[15],
    ]
}


/*

    nah, we do this:

        forward: X = (C x trans(C)) * E

        inverse: x = trans(C) (X * E) C

        with:
                1  1  1  1
                2  1 -1 -2
            C = 1 -1 -1  1
                1 -2  2 -1

                aa    ab/2  aa    ab/2
                ab/2  bb/4  ab/2  bb/4
            E = aa    ab/2  aa    ab/2
                ab/2  bb/4  ab/2  bb/4

        with:
            a = 1/2
            b = sqrt(2/5)

        * = element-wise scaling

        and E goes in the quantization stage instead

*/